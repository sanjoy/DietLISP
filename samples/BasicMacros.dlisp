;; RUN: ../dlisp <file>

(global-bind if (#builtin# #if#))
;; EXPECT: #operative#
(global-bind cons (#builtin# #cons#))
;; EXPECT: #operative#
(global-bind nil ((#builtin# #nil#)))
;; EXPECT: []
(global-bind eval* (#builtin# #eval*#))
;; EXPECT: #operative#
(global-bind let (#builtin# #let#))
;; EXPECT: #operative#
(global-bind nilp (#builtin# #nilp#))
;; EXPECT: #operative#
(global-bind + (#builtin# #plus#))
;; EXPECT: #operative#
(global-bind tail (#builtin# #tail#))
;; EXPECT: #operative#
(global-bind unwrap-ast (#builtin# #unwrap-ast#))
;; EXPECT: #operative#

(global-bind clist (operative (x) env (cons (eval* env x) nil)))
;; EXPECT: #operative#
(global-bind when (operative (condition action) env
                             (if (eval* env condition)
                                 (eval* env action)
                                 0)))
;; EXPECT: #operative#

(clist 2)
;; EXPECT: [2]
(when true 5)
;; EXPECT: 5
(when false 5)
;; EXPECT: 0

(global-bind list-length
             (operative (l) e
                (let (list (eval* e l))
                  (if (nilp list)
                      0
                      (+ 1 (list-length (tail list)))))))
;; EXPECT: #operative#

(global-bind ast-length (operative (ast) e
                                   (list-length (unwrap-ast ast))))
;; EXPECT: #operative#

(ast-length (+ 4 6 7))
;; EXPECT: 4

(global-bind quote (operative (l) e
                             (unwrap-ast l)))
;; EXPECT: #operative#

(quote (5 6 7))
;; EXPECT: [5,6,7]
